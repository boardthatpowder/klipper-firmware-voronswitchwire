[gcode_macro test_speed_fast]
gcode:
    {% set SPEED = params.SPEED|default(100)|float %}   # speed
    {% set ACCEL = params.ACCEL|default(1000)|float %}   # acceleration
    {% set SC = params.SC|default(4.0)|float %}         # square corner velocity
    {% set XMIN = params.XMIN|default(10)|float %}     # min x
    {% set XMAX = params.XMAX|default(240)|float %}     # max x
    {% set YMIN = params.YMIN|default(10)|float %}     # min y
    {% set YMAX = params.YMAX|default(220)|float %}     # max y
    {% set CURRENT = params.CURRENT|default(0.95)|float %}   # stepper current (amps)

    SAVE_GCODE_STATE NAME=test_speed_fast_state

    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={CURRENT} HOLDCURRENT={CURRENT}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={CURRENT} HOLDCURRENT={CURRENT}

    G90
    SET_VELOCITY_LIMIT VELOCITY=200 ACCEL=1000 ACCEL_TO_DECEL=1000 SQUARE_CORNER_VELOCITY=4.0
    G28
    GET_POSITION
    G1 F100000

    SET_VELOCITY_LIMIT VELOCITY={SPEED} ACCEL={ACCEL} ACCEL_TO_DECEL={ACCEL|float / 2} SQUARE_CORNER_VELOCITY={SC}
    G1 X{XMIN} Y{YMIN}

    {% for i in range(2) %}
        G1 X{XMAX} Y{YMAX}
        G1 X{XMIN} Y{YMIN}
    {% endfor %}

    G1 X{XMIN} Y{YMAX}

    {% for i in range(2) %}
        G1 X{XMIN} Y{YMAX}
        G1 X{XMAX} Y{YMIN}
    {% endfor %}

    G1 X{XMIN} Y{YMAX}
    G1 X{XMIN} Y{YMIN}
    G1 X{XMAX} Y{YMAX}
    G1 X{XMIN} Y{YMAX}
    G1 X{XMIN} Y{YMIN}

    SET_VELOCITY_LIMIT VELOCITY=200 ACCEL=1500 ACCEL_TO_DECEL=1000 SQUARE_CORNER_VELOCITY=4.0
    G28
    GET_POSITION
    RESTORE_GCODE_STATE NAME=test_speed_fast_state

[gcode_macro INITIALIZE_FILAMENT]
gcode: 
    {% if "z" not in printer.toolhead.homed_axes %} ; G28 Home if needed
        G28             ; home
    {% endif %}
    {% if params.TYPE == 'abs' %}
        BED_MESH_PROFILE LOAD=high_temp
        {% if params.BRAND == 'kvp' %}
            SET_PRESSURE_ADVANCE ADVANCE=0.056
        {% elif params.BRAND == 'paramount' %}
            #TODO: needs calibrating
        {% endif %}  

    {% elif params.TYPE == 'pla' %}
        BED_MESH_PROFILE LOAD=low_temp
        {% if params.BRAND == 'overture' %}
            #TODO: needs calibrating
        {% endif %}  

    {% elif params.TYPE == 'plapro' %}
        BED_MESH_PROFILE LOAD=low_temp
        {% if params.BRAND == 'overture' %}
            #TODO: needs calibrating
        {% endif %}  

    {% elif params.TYPE == 'petg' %}
        BED_MESH_PROFILE LOAD=high_temp
        SET_GCODE_OFFSET Z_ADJUST=0.04 MOVE=1  ; don't squish petg as much
        {% if params.BRAND == 'overture' %}
            SET_PRESSURE_ADVANCE ADVANCE=0.09
        {% endif %}  

    {% endif %}  

[gcode_macro START_PRINT]
gcode:
    M117 Starting print
    CLEAR_PAUSE
    G90             ; absolute positioning
    M82             ; absolute extruder mode
    M107            ; turn fan off
    BED_MESH_CLEAR  ; clear any bed mesh

    {% if params.BED %}
        M140 S{params.BED}         ; set bed final temp
        M190 S{params.BED}         ; wait for bed final temp
    {% endif %}
    {% if params.EXTRUDER %}
        M104 S{params.EXTRUDER}    ; set extruder final temp
        M109 S{params.EXTRUDER}    ; wait for extruder final temp
    {% endif %}

    {% if "z" not in printer.toolhead.homed_axes %} ; G28 Home if needed
        G28             ; home
    {% endif %}
    # PRIME_LINE
    M117 Printing

# prime the nozzle 
[gcode_macro PRIME_LINE]
gcode: 
    M117 Priming Line
    {% if "z" not in printer.toolhead.homed_axes %} ; G28 Home if needed
        G28             ; home
    {% endif %}
    SAVE_GCODE_STATE NAME=PRIME_LINE_state
    G90                                 ; absolute positioning
    G92 E0                              ; reset extruder
    G1 Z5.0 F3000                       ; move Z Axis up
    G1 X10 Y10 Z0.24 F5000.0            ; move to start position
    G1 X10 Y200 Z0.24 F1500.0 E15     ; draw the first line
    G1 X10.4 Y200 Z0.24 F5000.0         ; move to side a little
    G1 X10.4 Y10 Z0.24 F1500.0 E30        ; draw the second line
    G92 E0                              ; reset Extruder
    G1 Z5.0 F3000                       ; move Z Axis up
    RESTORE_GCODE_STATE NAME=PRIME_LINE_state

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    {% set X = params.X|default(250)|float %} 
    {% set Y = params.Y|default(230)|float %} 
    {% set Z = params.Z|default(10)|float %} 
    M104 S0
    M140 S0
    M141 S0
    M106 S0
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    BASE_CANCEL_PRINT

[gcode_macro END_PRINT]
gcode:
    M117 Ending print
    M400            ; wait for buffer to clear
    PARK
    M107            ; turn fan off
    TURN_OFF_HEATERS
    M84             ; turn off all motors
    BED_MESH_CLEAR    
    M117 Complete! 

# Filament change
[gcode_macro M600]
gcode:
    M117 Filament change
    PAUSE
    UNLOAD

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
    {% set X = params.X|default(125)|float %} 
    {% set Y = params.Y|default(10)|float %} 
    {% set Z = params.Z|default(10)|float %} 
    M117 Pausing
    SAVE_GCODE_STATE NAME=PAUSE_state
    BASE_PAUSE
    RESPOND TYPE=command MSG=action:paused
    G91
    G1 E-1.7 F2100
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F10000
    G91
    SET_IDLE_TIMEOUT TIMEOUT=3600
    M117 Paused

[gcode_macro RESUME]
rename_existing: BASE_RESUME
gcode:
    {% set E = params.E|default(1)|float %} 
    M117 Resuming
    SET_IDLE_TIMEOUT TIMEOUT=600
    G91
    G1 E{E} F2100
    G90
    RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1
    BASE_RESUME
    RESPOND TYPE=command MSG=action:resumed
    M117 Printing

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    M117 Cancelling
    TURN_OFF_HEATERS
    M107    ; turn off fan
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    BASE_CANCEL_PRINT
    PARK
    M117 Cancelled

[gcode_macro PARK]
gcode:
    {% set X = params.X|default(250)|float %} 
    {% set Y = params.Y|default(230)|float %} 
    {% set Z = params.Z|default(210)|float %} 
    {% set E = params.E|default(1)|float %} 
    M117 Parking
    SAVE_GCODE_STATE NAME=PARK_state
    G91
    G1 E-{E} F2100
    G90
    G1 X{X} Y{Y} Z{Z} F6000
    RESTORE_GCODE_STATE name=PARK_state
    M117 Parked

# PROBE_CALIBRATE wrapper
[gcode_macro PROBE_CALIBRATE]
rename_existing: BASE_PROBE_CALIBRATE
gcode:
    {% if "z" not in printer.toolhead.homed_axes %} ; G28 Home if needed
        G28             ; move to origin
    {% endif %}
    G1 X125 Y127 Z10 F10000 ; align with bed mesh relative index
    BASE_PROBE_CALIBRATE

# Bed mesh
[gcode_macro BED_MESH]
gcode:
    M117 Generating bed mesh
    BED_MESH_CLEAR
    BED_MESH_PROFILE REMOVE={params.NAME}
    {% if "z" not in printer.toolhead.homed_axes %} ; G28 Home if needed
        G28             ; move to origin
    {% endif %}
    BED_MESH_CALIBRATE
    G1 X125 Y115 Z50 F10000
    BED_MESH_PROFILE SAVE={params.NAME}
    SAVE_CONFIG

[gcode_macro SET_CASELIGHT]
# Control chamber LED, 0.0-1.0
gcode:
    {% set S = params.S|default(10)|float %} 
    set_pin pin=caselight value={S}


[gcode_macro store_extruder_temp]
variable_temp: 0
gcode:
  SET_GCODE_VARIABLE MACRO=store_extruder_temp VARIABLE=temp VALUE={printer.extruder.target}

[gcode_macro restore_extruder_temp]
gcode:
  {% if printer["gcode_macro store_extruder_temp"].temp >0 %}
    M104 S{printer["gcode_macro store_extruder_temp"].temp}
  {% endif %}

[gcode_macro restore_and_wait_extruder_temp]
gcode:
  {% if printer["gcode_macro store_extruder_temp"].temp >0 %}
    M109 S{printer["gcode_macro store_extruder_temp"].temp}
  {% endif %}

[gcode_macro store_bed_temp]
variable_temp: 0
gcode:
  SET_GCODE_VARIABLE MACRO=store_bed_temp VARIABLE=temp VALUE={printer.heater_bed.target}

[gcode_macro restore_bed_temp]
gcode:
  {% if printer["gcode_macro store_bed_temp"].temp >0 %}
    M140 S{printer["gcode_macro store_bed_temp"].temp}
  {% endif %}

[gcode_macro restore_and_wait_bed_temp]
gcode:
  {% if printer["gcode_macro store_bed_temp"].temp >0 %}
    M190 S{printer["gcode_macro store_bed_temp"].temp}
  {% endif %}
